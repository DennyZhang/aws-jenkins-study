AWSTemplateFormatVersion: '2010-09-09'
Description: 'AWS CloudFormation Sample Template: LaunchConfiguration and AutoScaling'
Parameters:
  VPC:
    Type: AWS::EC2::VPC::Id
    Description: Choose which VPC the Application Load Balancer should be deployed to
  SecurityGroupId:
    Description: Security Group
    Type: List<AWS::EC2::SecurityGroup::Id>
  Subnets:
    Description: Choose which subnets the Application Load Balancer should be deployed to
    Type: List<AWS::EC2::Subnet::Id>
  StackName:
    Description: An environment name that will be prefixed to resource names
    Type: String
    Default: 'aws-jenkins'
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instances
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  InstanceType:
    Description: Jenkins EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues:
      - t1.micro
      - t2.nano
      - t2.micro
      - t2.small
      - m1.small
    ConstraintDescription: must be a valid EC2 instance type.
  MinSize:
    Description: Mininum instance count
    Type: Number
    MinValue: 0
    MaxValue: 65535
    ConstraintDescription: TCP ports must be between 0 - 65535
  MaxSize:
    Description: Maximum instance count
    Type: Number
    MinValue: 0
    MaxValue: 65535
    ConstraintDescription: TCP ports must be between 0 - 65535
  LBPort:
    Description: Load balancer port
    Type: Number
    MinValue: 0
    MaxValue: 65535
    ConstraintDescription: TCP ports must be between 0 - 65535
  LBMatcherStatus:
    Description: HTTP return code for health check
    Default: 403
    Type: Number
    MinValue: 0
    MaxValue: 65535
    ConstraintDescription: TCP ports must be between 0 - 65535
  JenkinsPort:
    Description: The Jenkins Port
    Type: Number
    MinValue: 0
    MaxValue: 65535
    ConstraintDescription: TCP ports must be between 0 - 65535
  JenkinsUser:
    Description: The Jenkins username
    Type: String
    MinLength: '1'
    MaxLength: '16'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric
      characters.
  JenkinsPassword:
    NoEcho: 'true'
    Description: The Jenkins password
    Type: String
    MinLength: '8'
    MaxLength: '41'
    AllowedPattern: '[a-zA-Z0-9]*'
    ConstraintDescription: must contain only alphanumeric characters.
  SlackAuthToken:
    Default: ''
    NoEcho: 'true'
    Description: Slack Token For Jenkins Jobs. If empty, slack notification is muted.
    Type: String
    MinLength: '0'
    MaxLength: '41'
    AllowedPattern: '[a-zA-Z0-9]*'
    ConstraintDescription: must contain only alphanumeric characters.
  HealthCheckPath:
    Description: An environment name that will be prefixed to resource names
    Type: String
    Default: '/'
    MinLength: '1'
    MaxLength: '40'

Mappings:
  AWSInstanceType2Arch:
    t1.micro:
      Arch: PV64
    t2.nano:
      Arch: HVM64
    t2.micro:
      Arch: HVM64
    t2.small:
      Arch: HVM64
    m1.small:
      Arch: PV64
  AWSInstanceType2NATArch:
    t1.micro:
      Arch: NATPV64
    t2.nano:
      Arch: NATHVM64
    t2.micro:
      Arch: NATHVM64
    t2.small:
      Arch: NATHVM64
    m1.small:
      Arch: NATPV64
  AWSRegionArch2AMI:
    us-east-1:
      PV64: ami-2a69aa47
      HVM64: ami-6869aa05
      HVMG2: ami-1f12e965
    us-west-2:
      PV64: ami-7f77b31f
      HVM64: ami-7172b611
      HVMG2: ami-5c9b6124
    us-west-1:
      PV64: ami-a2490dc2
      HVM64: ami-31490d51
      HVMG2: ami-7291a112
    eu-west-1:
      PV64: ami-4cdd453f
      HVM64: ami-f9dd458a
      HVMG2: ami-b411c5cd
    eu-west-2:
      PV64: NOT_SUPPORTED
      HVM64: ami-886369ec
      HVMG2: NOT_SUPPORTED
    eu-central-1:
      PV64: ami-6527cf0a
      HVM64: ami-ea26ce85
      HVMG2: ami-be40f2d1
    ap-northeast-1:
      PV64: ami-3e42b65f
      HVM64: ami-374db956
      HVMG2: ami-3efd2c58
    ap-northeast-2:
      PV64: NOT_SUPPORTED
      HVM64: ami-2b408b45
      HVMG2: NOT_SUPPORTED
    ap-southeast-1:
      PV64: ami-df9e4cbc
      HVM64: ami-a59b49c6
      HVMG2: ami-3e91ed5d
    ap-southeast-2:
      PV64: ami-63351d00
      HVM64: ami-dc361ebf
      HVMG2: ami-84a142e6
    ap-south-1:
      PV64: NOT_SUPPORTED
      HVM64: ami-ffbdd790
      HVMG2: ami-25ffbe4a
    us-east-2:
      PV64: NOT_SUPPORTED
      HVM64: ami-f6035893
      HVMG2: NOT_SUPPORTED
    ca-central-1:
      PV64: NOT_SUPPORTED
      HVM64: ami-730ebd17
      HVMG2: NOT_SUPPORTED
    sa-east-1:
      PV64: ami-1ad34676
      HVM64: ami-6dd04501
      HVMG2: NOT_SUPPORTED
    cn-north-1:
      PV64: ami-77559f1a
      HVM64: ami-8e6aa0e3
      HVMG2: NOT_SUPPORTED
    cn-northwest-1:
      PV64: ami-80707be2
      HVM64: ami-cb858fa9
      HVMG2: NOT_SUPPORTED

Resources:
  # http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-loadbalancer.html
  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: "LoadBalancerJenkins"
      Scheme: internet-facing
      Subnets: !Ref Subnets
      LoadBalancerAttributes:
      - Key: idle_timeout.timeout_seconds
        Value: '50'
      SecurityGroups: !Ref SecurityGroupId
      Tags:
        - Key: Name
          Value: !Ref StackName

  # http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig.html
  JenkinsLaunchConfig:
    Type: "AWS::AutoScaling::LaunchConfiguration"
    Properties:
      KeyName: !Ref KeyName
      SecurityGroups: !Ref SecurityGroupId
      InstanceType: !Ref InstanceType
      ImageId: !FindInMap [AWSRegionArch2AMI, !Ref 'AWS::Region', !FindInMap [AWSInstanceType2Arch,
          !Ref 'InstanceType', Arch]]
      # TODO: change slack_buildserverurl from localhost to LoadBalancer.DNSName LBPort
      UserData:
        "Fn::Base64": 
          !Sub |
            #!/bin/bash -xe
            wget -O /root/userdata_launchcfg.sh \
              https://raw.githubusercontent.com/DennyZhang/aws-jenkins-study/master/utility/userdata_launchcfg.sh
            mkdir -p /home/ec2-user/chef/
            cat > /home/ec2-user/chef/node.json <<-EOF
            {"jenkins_demo":
              {"jenkins_port":"${JenkinsPort}",
               "default_username":"${JenkinsUser}",
               "default_password":"${JenkinsPassword}",
               "jenkins_jobs":"CommonServerCheckRepo",
               "slack_authtoken":"${SlackAuthToken}",
               "slack_teamdomain":"mywechat",
               "slack_buildserverurl":"http://localhost:${JenkinsPort}/",
               "slack_room":"#denny-alerts"
              },
              "run_list":["recipe[apt::default]",
                          "recipe[jenkins-demo::default]",
                          "recipe[jenkins-demo::conf_job]"
                         ]
            }
            EOF
            bash -xe /root/userdata_launchcfg.sh "/home/ec2-user/chef/node.json" "Scenario-302/cookbooks/jenkins-demo"

  ALBTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name:
        "Fn::Sub":
          - "TG-${StackName}"
          - StackName: !Ref AWS::StackName
      HealthCheckIntervalSeconds: 30
      HealthCheckProtocol: HTTP
      HealthCheckPort: !Ref JenkinsPort
      HealthCheckTimeoutSeconds: 10
      HealthyThresholdCount: 4
      HealthCheckPath: !Ref HealthCheckPath
      Matcher:
        HttpCode: !Ref LBMatcherStatus
      Port: !Ref LBPort
      Protocol: HTTP
      VpcId: !Ref VPC
      # TODO: change Targets
      # Targets:
      # - Id:
      #     Ref: Instance1
      #   Port: 80
      # - Id:
      #     Ref: Instance2
      #   Port: 80

  LoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
      - Type: forward
        TargetGroupArn: !Ref ALBTargetGroup
      LoadBalancerArn: !Ref LoadBalancer
      Port: !Ref LBPort
      Protocol: HTTP

  JenkinsScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      # http://docs.aws.amazon.com/sdkforruby/api/Aws/EC2/Types/AvailabilityZone.html#zone_name-instance_method
      # TODO: check this AZ
      AvailabilityZones:
        Fn::GetAZs: ""
      LaunchConfigurationName: !Ref JenkinsLaunchConfig
      Tags:
        - Key: Name
          Value: !Sub ${StackName}-LaunchCfg
      MinSize: !Ref MinSize
      MaxSize: !Ref MaxSize
      LoadBalancerNames: "LoadBalancerJenkins"

Outputs:
  StackName:
    Value:
      !Ref AWS::StackName
  ALBLoadBalancer:
    Description: A reference to the Application Load Balancer
    Value: !Ref LoadBalancer
    Export:
      Name: 
        "Fn::Sub": 
          - ${StackName}-ALBLoadBalancer
          - StackName: !Ref AWS::StackName
  LoadBalancerUrl:
    Description: The URL of the ALB
    Value: !Join ['', ['http://', !GetAtt LoadBalancer.DNSName, ':', !Ref LBPort]]
